name: K8s CI

on:
  push:
    branches: [ "main", "tam-k8s-docker-CI-CD" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-docker:
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use local action
        uses: ./.github/workflows/docker-image.yml

  build-k8s:
    needs: build-docker
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
        - uses: actions/checkout@v3
        - run: sudo snap install microk8s --classic
        - run: |
            sudo usermod -a -G microk8s runner 
            sudo microk8s enable registry
        - run: sudo microk8s status --wait-ready
        - run: sudo microk8s kubectl config view
        - name: Build the backend Docker image
          run: |
            docker build -t backend-golang --target program .
            docker build -t mysql-db --target db .
          working-directory: ./backend

        - name: Build the frontend Docker image
          run: |
            docker build -t frontend .
          working-directory: ./frontend
    

        - name: move container local to microk8s
          run: |
            sudo docker save frontend > myimage.tar
            sudo microk8s ctr image import myimage.tar
            sudo docker save backend-golang > myimage.tar
            sudo microk8s ctr image import myimage.tar
            sudo docker save mysql-db > myimage.tar
            sudo microk8s ctr image import myimage.tar
            sudo microk8s ctr images ls

        - name: Run k8s
          run: |
            sudo microk8s kubectl apply -f backend/database-deployment.yaml 
            sudo microk8s kubectl apply -f backend/database-service.yaml 
            sudo microk8s kubectl apply -f backend/backend-deployment.yaml 
            sudo microk8s kubectl apply -f backend/backend-service.yaml 
            sudo microk8s kubectl apply -f frontend/frontend-deployment.yaml 
            sudo microk8s kubectl apply -f frontend/frontend-service.yaml 
        
        
        - name: test k8s
          run : |
            sudo microk8s kubectl get svc 
        - name: test pod
          run : |
            sudo microk8s kubectl get po -o wide
        - name: test k8s
          run : |
            sudo microk8s kubectl get deployments
        - name: test k8s
          run : |
            sudo microk8s kubectl get services
        
        - run: sudo microk8s kubectl describe pods 

        - run: docker images

        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"

        - name: Install library 
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: get log of a pod
          run: |
            sudo microk8s kubectl logs --selector=tier=frontend -c nginx
            sudo microk8s kubectl logs --selector=tier=backend -c back-go
            sudo microk8s kubectl logs --selector=app=database-mysql -c database-mysql
        - name: test k8s
          run : |
            python3 test_k8s.py

        - name: Stop k8s
          run: |
            sudo microk8s kubectl delete -f backend/backend-deployment.yaml 
            sudo microk8s kubectl delete -f backend/backend-service.yaml 
            sudo microk8s kubectl delete -f frontend/frontend-deployment.yaml 
            sudo microk8s kubectl delete -f frontend/frontend-service.yaml 
      
