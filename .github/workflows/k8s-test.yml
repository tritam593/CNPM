name: K8s CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-k8s:
    # needs: build-docker
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
        - uses: actions/checkout@v3
        - run: sudo snap install microk8s --classic
        - run: |
            sudo usermod -a -G microk8s runner 
            sudo microk8s enable registry
        - run: sudo microk8s status --wait-ready
        - run: sudo microk8s kubectl config view
        - name: Build docker
          run: |
            cd frontend;
            docker build -t frontend-flask .;
            cd ..;
            docker build . --file ./backend/Dockerfile --tag backend-flask;

        - name: move container local to microk8s
          run: |
            sudo docker save frontend-flask > myimage.tar
            sudo microk8s ctr image import myimage.tar
            sudo docker save backend-flask > myimage.tar
            sudo microk8s ctr image import myimage.tar
            sudo microk8s ctr images ls

        - name: Run k8s
          run: |
            sudo microk8s kubectl apply -f backend/backend-deployment.yaml ;echo 11111111111111
            sudo microk8s kubectl apply -f backend/backend-service.yaml ;echo 22222222222
            sudo microk8s kubectl apply -f frontend/frontend-deployment.yaml ;echo 33333333333333
            sudo microk8s kubectl apply -f frontend/frontend-service.yaml ;echo 4444444444444444
        
        
        - name: test k8s
          run : |
            sudo microk8s kubectl get svc 
        - name: test pod
          run : |
            sudo microk8s kubectl get po -o wide
        - name: test k8s
          run : |
            sudo microk8s kubectl get deployments
        - name: test k8s
          run : |
            sudo microk8s kubectl get services
        
        - run: sudo microk8s kubectl describe pods 
        
        - run: docker images

        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"

        - name: Install library 
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        - name: Stop k8s
          run: |
            sudo microk8s kubectl delete -f backend/backend-deployment.yaml 
            sudo microk8s kubectl delete -f backend/backend-service.yaml 
            sudo microk8s kubectl delete -f frontend/frontend-deployment.yaml 
            sudo microk8s kubectl delete -f frontend/frontend-service.yaml 
      
