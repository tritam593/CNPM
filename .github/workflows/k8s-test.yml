name: K8s CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-k8s:
    # needs: build-docker
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
        - uses: actions/checkout@v3

        - run: |
            sudo curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-hyperkit && chmod +x docker-machine-driver-hyperkit && sudo mv docker-machine-driver-hyperkit /usr/local/bin/ && sudo chown root:wheel /usr/local/bin/docker-machine-driver-hyperkit && sudo chmod u+s /usr/local/bin/docker-machine-driver-hyperkit

        - run: sudo snap install kubectl --classic
        - run: |
            sudo curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube
        - run: |
            sudo mkdir -p /usr/local/bin/
            sudo install minikube /usr/local/bin/
        

        - run: minikube start --vm-driver=hyperkit

        - name: Build docker
          run: |
            cd frontend;
            docker build -t frontend-flask .;
            cd ..;
            docker build . --file ./backend/Dockerfile --tag backend-flask;

        - name: Run k8s
          run: |
            sudo kubectl apply -f backend/backend-deployment.yaml ;echo 11111111111111
            sudo kubectl apply -f backend/backend-service.yaml ;echo 22222222222
            sudo kubectl apply -f frontend/frontend-deployment.yaml ;echo 33333333333333
            sudo kubectl apply -f frontend/frontend-service.yaml ;echo 4444444444444444
        
        # - name: Set up Python 3.10
        #   uses: actions/setup-python@v3
        #   with:
        #     python-version: "3.10"

        # - name: Install library 
        #   run: |
        #     python -m pip install --upgrade pip
        #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: test k8s
          run : |
            sudo kubectl get svc 
        - name: test pod
          run : |
            sudo kubectl get po -o wide
        - name: test k8s
          run : |
            sudo kubectl get deployments
        - name: test k8s
          run : |
            sudo kubectl get services
        
        - run: sudo kubectl describe pods 

        - run: docker ps

        - run: docker ps -a

        - run: docker images


        - name: Stop k8s
          run: |
            sudo kubectl delete -f backend/backend-deployment.yaml 
            sudo kubectl delete -f backend/backend-service.yaml 
            sudo kubectl delete -f frontend/frontend-deployment.yaml 
            sudo kubectl delete -f frontend/frontend-service.yaml 
      
